name: Rust Build and Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          # macOS targets
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_path: target/aarch64-apple-darwin/release/path-finder
            
          # Linux targets
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_path: target/x86_64-unknown-linux-gnu/release/path-finder
            
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary_path: target/aarch64-unknown-linux-gnu/release/path-finder
            use_cross: true

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    
    - name: Install Cross (if needed)
      if: matrix.use_cross
      run: cargo install cross
    
    - name: Build
      run: |
        if [ "${{ matrix.use_cross }}" = "true" ]; then
          cross build --release --target ${{ matrix.target }}
        else
          cargo build --release --target ${{ matrix.target }}
        fi
    
    - name: Run tests (skip cross-compiled targets)
      if: ${{ !matrix.use_cross }}
      run: cargo test --target ${{ matrix.target }}
    
    - name: Prepare artifact
      run: |
        mkdir -p artifacts
        cp ${{ matrix.binary_path }} artifacts/
        cd artifacts
        tar -czf path-finder-${{ matrix.target }}.tar.gz path-finder
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: path-finder-${{ matrix.target }}
        path: artifacts/path-finder-${{ matrix.target }}.tar.gz
        if-no-files-found: error

  release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: List artifacts
      run: find . -type f | sort
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          */*.tar.gz
        draft: false
        prerelease: false
        generate_release_notes: true
